import java.util.Scanner;
public class GameOfLifeBoard {
	
	static boolean go = true;
	private char[][] board;
	private char[][] nextBoard;
	public static final char LIVE = 'x';
	public static final char DEAD = '-';
	
	public GameOfLifeBoard(int size){
		this.board = new char[size][size];
		this.nextBoard = new char[size][size];
		for(int i = 0; i < board.length; i++){
			for(int j = 0; j < board.length; j++){
				nextBoard[i][j] = GameOfLifeBoard.DEAD;
				if(i == 0 && j == 1 || i == 1 && j == 2 ||i == 2 && j < 3){
					board[i][j] = GameOfLifeBoard.LIVE;
				}
				else{
					board[i][j] = GameOfLifeBoard.DEAD;
				}
			}
		}
	}

	public void generateNextStep(){
		for(int i = 0; i < board.length; i++){
			for(int j = 0; j < board.length; j++){
				int neighbors = getNeighborCount(i, j);
				if(board[i][j] == LIVE){
					if(neighbors == 2){
						System.out.println("<2");
						nextBoard[i][j] = LIVE;
					}
					else if(neighbors == 3){
						System.out.println(">3");
						nextBoard[i][j] = LIVE;
					}
					else if(neighbors > 3 || neighbors < 2){
						nextBoard[i][j] = DEAD;
					}
				}
				if(board[i][j] == DEAD){
					if(neighbors > 3){
						nextBoard[i][j] = DEAD;
					}
					else if(neighbors < 2){
						nextBoard[i][j] = DEAD;
					}
					else{
						nextBoard[i][j] = LIVE;
					}
				}
			}
		}
		this.printBoard(nextBoard);
		this.board = this.nextBoard;
		for(int i = 0; i < board.length; i++){
			for(int j = 0; j < board.length; j++){
				this.nextBoard[i][j] = DEAD;
			}
		}
	}
	
	// Neighbor Count Around Cell
	public int getNeighborCount(int row, int col){	
		int numNeighbors = 0;
		for(int i = row - 1; i <= row + 1; i++){
	        if (i >= 0 && i < this.board.length){
	            for(int j = col - 1; j <= col + 1; j++){
	                if (j >= 0 && j < this.board[i].length){
	                    if (i != row || j != col){
	                        if (this.board[i][j] == GameOfLifeBoard.LIVE){
	                            numNeighbors++;
	                        }
	                    }
	                    
	                }
	            }
	        }
		}
		return numNeighbors;
	}
	
	
	public void printBoard(char brd[][]){
		for(int i = 0; i < brd.length; i++){
			for(int j = 0; j < brd[i].length; j++){
				System.out.print(brd[i][j]);
				if(j < brd[i].length - 1){
					System.out.print(" ");
				}
			}
			System.out.println();
		}
	}
	
	public static void main(String[] args){
		Scanner kb = new Scanner(System.in);
		GameOfLifeBoard glider = new GameOfLifeBoard(9);
		while(go){
			
			System.out.println("Board");
			glider.printBoard(glider.board);
			glider.generateNextStep();
			
			String userInput = kb.next();
			if(userInput.equals("quit")){
				go = false;
			}
		}
	}
}